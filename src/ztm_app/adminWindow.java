/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ztm_app;

import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author DAWID
 */
public class adminWindow extends javax.swing.JFrame {

    /**
     * Creates new form adminWindow
     */
    private Connection conn;
    private adminWindow adminForm;
    private Integer option = 0;
    
    public adminWindow() {
        initComponents();
        this.setResizable(false);
    }
    public adminWindow(Connection conn) {
        this.conn = conn;
        initComponents();
        this.setResizable(false);
        this.adminForm = this;
        this.setLocation(350, 200);
        refreshTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        loggedLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();
        bottomPanel2 = new javax.swing.JPanel();
        choiceLabel2 = new javax.swing.JLabel();
        tablePane2 = new javax.swing.JScrollPane();
        mainTable2 = new javax.swing.JTable();
        jComboBox = new javax.swing.JComboBox<>();
        searchButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        AddButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loggedLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loggedLabel.setText("Zalogowany jako:");

        userNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userNameLabel.setText("Administrator");

        logOutButton.setText("Wyloguj");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loggedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(411, 411, 411)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(loggedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutButton)))
        );

        choiceLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        choiceLabel2.setText("Wybierz informacje jakie chcesz wyszukać:");

        mainTable2.setAutoCreateRowSorter(true);
        mainTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        mainTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        mainTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablePane2.setViewportView(mainTable2);

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pracownicy", "Zarzad", "Wynagrodzenia" }));
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });

        searchButton2.setText("Wyszukaj");
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanel2Layout = new javax.swing.GroupLayout(bottomPanel2);
        bottomPanel2.setLayout(bottomPanel2Layout);
        bottomPanel2Layout.setHorizontalGroup(
            bottomPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanel2Layout.createSequentialGroup()
                .addGroup(bottomPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(choiceLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanel2Layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addComponent(tablePane2, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        bottomPanel2Layout.setVerticalGroup(
            bottomPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanel2Layout.createSequentialGroup()
                .addGroup(bottomPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(choiceLabel2)
                        .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bottomPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchButton2)))
                .addGap(18, 18, 18)
                .addComponent(tablePane2, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );

        AddButton.setText("Dodaj");
        AddButton.setToolTipText("");
        AddButton.setName("Dodaj"); // NOI18N
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Zaktualizuj");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Usuń");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1)
                        .addComponent(bottomPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void refreshTable() {
        try{
            switch (option){
                case 0:
                mainTable2.setModel(new PracownicyTableModel(new Pracownicy().getAll(conn)));
                break;
                case 1:
                mainTable2.setModel(new PocztyTableModel(new Poczty().getAll(conn)));
                break;
                case 2:
                mainTable2.setModel(new WynagrodzeniaTableModel(new Wynagrodzenia().getAll(conn)));
                break;
            }
        }
        catch(SQLException exc){
            JOptionPane.showMessageDialog(this,"Nie udało się połączyć z bazą danych","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void createPracownikForm(Integer maxID, Boolean isToAdd){
        //this.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularzPracownicy(conn, maxID,adminForm,isToAdd).setVisible(true);
            }
        });    
    }
    
    private void createPracownikForm(Pracownicy pracownik, Boolean isToAdd){
        //this.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularzPracownicy(conn, pracownik,adminForm,isToAdd).setVisible(true);
            }
        });    
    }
    
    private void createWynagrodzenieForm(Integer maxID, Boolean isToAdd){
        //this.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularzWynagrodzenia(maxID,adminForm,isToAdd).setVisible(true);
            }
        });    
    }
    
    private void createWynagrodzenieForm(Wynagrodzenia wynagrodzenie, Boolean isToAdd){
        //this.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularzWynagrodzenia(wynagrodzenie,adminForm,isToAdd).setVisible(true);
            }
        });    
    }
    
    private void createPocztyForm(Integer maxID, Boolean isToAdd){
        //this.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularzPoczty(maxID,adminForm,isToAdd).setVisible(true);
            }
        });    
    }
    
    private void createPocztyForm(Poczty poczta, Boolean isToAdd){
        //this.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularzPoczty(poczta,adminForm,isToAdd).setVisible(true);
            }
        });    
    }
    
    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        Integer userOption;
        userOption = JOptionPane.showConfirmDialog(this, "Na pewno chcesz się wylogować?", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (userOption == JOptionPane.YES_OPTION){
            userOption = JOptionPane.showConfirmDialog(this, "Jestes pewien?", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (userOption == JOptionPane.YES_OPTION){
                userOption = JOptionPane.showConfirmDialog(this, "Na pewno nie zmieniłeś zdania?", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (userOption == JOptionPane.YES_OPTION){
                    userOption = JOptionPane.showConfirmDialog(this, "Ostatnia szansa, żeby się wycofać", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (userOption == JOptionPane.YES_OPTION){
                        userOption = JOptionPane.showConfirmDialog(this, "Więcej razy nie zapytam", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                        if (userOption == JOptionPane.YES_OPTION){
                            userOption = JOptionPane.showConfirmDialog(this, "Dlaczego mi to robisz?", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                            if (userOption == JOptionPane.YES_OPTION){
                                userOption = JOptionPane.showConfirmDialog(this, "Jaz zostaniesz to dostaniesz premię, wystarczy, że klikniesz No", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                                if (userOption == JOptionPane.YES_OPTION){
                                    userOption = JOptionPane.showConfirmDialog(this, "No dobra, dostaniesz awans, kliknij No", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                                    if (userOption == JOptionPane.YES_OPTION){
                                        userOption = JOptionPane.showConfirmDialog(this, "Przycisk Yes się zaciął, kliknij No, żeby się wylogować", "Wylogowywanie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                                        if (userOption == JOptionPane.YES_OPTION){
                                            JOptionPane.showMessageDialog(this,"Ahh.. Niech Ci będzie... ;(","Wylogowano",JOptionPane.INFORMATION_MESSAGE);
                                            try{
                                                conn.close();
                                            } catch(SQLException exc){

                                            }
                                            this.dispose();
                                        } else if(userOption == JOptionPane.NO_OPTION){
                                            JOptionPane.showMessageDialog(this,"Naiwniak xD","Nie ma wylogowywania się",JOptionPane.INFORMATION_MESSAGE);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            }
        }
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        refreshTable();
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        if (option == 0){
            Pracownicy prac = new Pracownicy();
            List <Pracownicy> pracownicyList = new ArrayList();
            int maxID = 0;
            try{
                pracownicyList = prac.getAll(conn);
            } catch (SQLException exc){
                JOptionPane.showMessageDialog(this,"Wystąpił nieoczekiwany błąd połączenia","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (int i = 0; i < pracownicyList.size(); ++i){
                if (pracownicyList.get(i).getNrPracownika() > maxID){
                    maxID = pracownicyList.get(i).getNrPracownika();
                }
            }
            createPracownikForm(maxID+1,true);
            
            
        } else if (option == 1){
           Poczty poczt = new Poczty();
            List <Poczty> pocztList = new ArrayList();
            int maxID = 0;
            try{
                pocztList = poczt.getAll(conn);
            } catch (SQLException exc){
                JOptionPane.showMessageDialog(this,"Wystąpił nieoczekiwany błąd połączenia","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (int i = 0; i < pocztList.size(); ++i){
                if (pocztList.get(i).getNrPoczty()> maxID){
                    maxID = pocztList.get(i).getNrPoczty();
                }
            }
            poczt.setNrPoczty(maxID + 1);
            // Wywolanie okna i add po zatwierdzeniu
        } else if (option == 2){
            Wynagrodzenia wyn = new Wynagrodzenia();
            List <Wynagrodzenia> wynagrodzeniaList = new ArrayList();
            int maxID = 0;
            try{
                wynagrodzeniaList = wyn.getAll(conn);
            } catch (SQLException exc){
                JOptionPane.showMessageDialog(this,"Wystąpił nieoczekiwany błąd połączenia","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (int i = 0; i < wynagrodzeniaList.size(); ++i){
                if (wynagrodzeniaList.get(i).getNrWynagrodzenia()> maxID){
                    maxID = wynagrodzeniaList.get(i).getNrWynagrodzenia();
                }
            }
            wyn.setNrPracownika(maxID + 1);
            createWynagrodzenieForm(maxID+1,true);
        }
        refreshTable();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        if (option == 0){
            Pracownicy prac = new Pracownicy();
            int i = mainTable2.getSelectedRow();
            if (i < 0){
                JOptionPane.showMessageDialog(this,"Nie wybrano żadnego rekordu","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            prac = (Pracownicy)mainTable2.getValueAt(i, -1);
            createPracownikForm(prac,false);
                    
        } else if (option == 1){
            ZKM zkm = new ZKM();
            int i = mainTable2.getSelectedRow();
            if (i < 0){
                JOptionPane.showMessageDialog(this,"Nie wybrano żadnego rekordu","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            zkm = (ZKM)mainTable2.getValueAt(i, -1);
            // Wywolanie okna i update po zatwierdzeniu
        } else if (option == 2){
            Wynagrodzenia wyn = new Wynagrodzenia();
            int i = mainTable2.getSelectedRow();
            if (i < 0){
                JOptionPane.showMessageDialog(this,"Nie wybrano żadnego rekordu","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            wyn = (Wynagrodzenia)mainTable2.getValueAt(i, -1);
            createWynagrodzenieForm(wyn,false);
        }
        refreshTable();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
       
        option = ((JComboBox)evt.getSource()).getSelectedIndex();
        refreshTable();
    }//GEN-LAST:event_jComboBoxActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        if (option == 0){
            Pracownicy prac = new Pracownicy();
            int i = mainTable2.getSelectedRow();
            int userOption;
            Integer ID;
            if (i < 0){
                JOptionPane.showMessageDialog(this,"Nie wybrano żadnego rekordu","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            userOption = JOptionPane.showConfirmDialog(this, "Czy na pewno chcesz usunąć wybrany rekord?", "Potwierdzenie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (userOption == JOptionPane.NO_OPTION){
                return;
            }
            ID = (Integer)mainTable2.getValueAt(i, 0);
            
            if (prac.deletePracownik(conn, ID) == 1){
                JOptionPane.showMessageDialog(this,"Rekord został pomyślnie usunięty","Sukces!",JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,"Nie udało się usunąć rekordu, sprawdź połączenie z bazą danych","Error",JOptionPane.ERROR_MESSAGE);
            }
        } else if (option == 1){
             JOptionPane.showMessageDialog(this,"Nie można usunąć zarządu, rozważ modyfikację","Error",JOptionPane.INFORMATION_MESSAGE);
        } else if (option == 2){
            Wynagrodzenia wyn = new Wynagrodzenia();
            int i = mainTable2.getSelectedRow();
            int userOption;
            Integer ID;
            if (i < 0){
                JOptionPane.showMessageDialog(this,"Nie wybrano żadnego rekordu","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            userOption = JOptionPane.showConfirmDialog(this, "Czy na pewno chcesz usunąć wybrany rekord?", "Potwierdzenie",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (userOption == JOptionPane.NO_OPTION){
                return;
            }
            ID = (Integer)mainTable2.getValueAt(i, 0);
            // Wywolanie okna i update po zatwierdzeniu
            if (wyn.deleteWynagrodzenie(conn, ID) == 1){
                JOptionPane.showMessageDialog(this,"Rekord został pomyślnie usunięty","Sukces!",JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,"Nie udało się usunąć rekordu, sprawdź połączenie z bazą danych","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        refreshTable();
    }//GEN-LAST:event_DeleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JPanel bottomPanel2;
    private javax.swing.JLabel choiceLabel2;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JLabel loggedLabel;
    private javax.swing.JTable mainTable2;
    private javax.swing.JButton searchButton2;
    private javax.swing.JScrollPane tablePane2;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
